DEFINE_UI_PARAMS(toneCurve, Tone Curve, DCTLUI_CHECK_BOX, 1)
DEFINE_UI_PARAMS(compressChroma, Compress Chroma, DCTLUI_CHECK_BOX, 1)
DEFINE_UI_PARAMS(gamutCompress, Gamut Compress, DCTLUI_CHECK_BOX, 1)
DEFINE_UI_PARAMS(d60Sim, D60 Sim, DCTLUI_CHECK_BOX, 0)
DEFINE_UI_PARAMS(asPQ, Encode as PQ P3-D65 48nits, DCTLUI_CHECK_BOX, 0)
DEFINE_UI_PARAMS(invert, Invert, DCTLUI_CHECK_BOX, 0)
DEFINE_UI_PARAMS(simpleToneMap, Simple Tone Map Test, DCTLUI_CHECK_BOX, 1)
DEFINE_UI_PARAMS(JMhOut, Diagnostic JMh Output, DCTLUI_CHECK_BOX, 0)


typedef struct
{
    float3 x;
    float3 y;
    float3 z;
} float3x3;

__CONSTANT__ float3x3 XYZ_to_RGB_output = {
// XYZ to P3-D65 matrix
    {  2.4934969119f, -0.9313836179f, -0.4027107845f},
    { -0.8294889696f,  1.7626640603f,  0.0236246858f},
    {  0.0358458302f, -0.0761723893f,  0.9568845240f}
};

__CONSTANT__ float3x3 RGB_to_XYZ_output = {
// P3-D65 to XYZ matrix
    {  0.4865709486f,  0.2656676932f,  0.1982172852f},
    {  0.2289745641f,  0.6917385218f,  0.0792869141f},
    { -0.0000000000f,  0.0451133819f,  1.0439443689f}
};

__CONSTANT__ float3x3 RGB_to_XYZ_P3D60 = {
    {  0.5049495342f,  0.2646814889f,  0.1830150515},
    {  0.2376233102f,  0.6891706692f,  0.0732060206},
    { -0.0000000000f,  0.0449459132f,  0.9638792711}
};
__CONSTANT__ float limitJmax = 100.0f;
__CONSTANT__ float midJ = 34.0965f; // ~10 nits in Hellwig J

__CONSTANT__ float daniele_n = 100.0f; // peak white  

  // In-gamut compression scaling for HDR/SDR appearance match
//     float log_peak = log10(daniele_n / daniele_n_r);
//     sat = max(0.2f, 1.9f - 1.55f * log_peak);
//     sat_thr = max(0.00007f, 0.017f - 0.015f * log_peak);
//     ccParams.y = chromaCParams.y + 15.0f * log_peak;
//     ccParams.z = 1.0f / max(0.5f, chromaCParams.z - 0.2f * log_peak);

// log_peak is zero at 100 nits (log10(100/100 = log10(1) = 0))
__CONSTANT__ float sat = 1.9f;
__CONSTANT__ float sat_thr = 0.017f;
__CONSTANT__ float3 ccParams = {0.0f, 4.3f, 1.0f};
__CONSTANT__ float clamp_thr = 0.999f;
__CONSTANT__ float clamp_dist = 1.2f;

// cusp values saved using debugPrint in Blink implementation
__CONSTANT__ float3 gamutCuspTable[360] = {
{60.372f, 107.219f, 0.207512f},
{60.1116f, 107.744f, 1.03248f},
{59.8478f, 108.229f, 1.89013f},
{59.5793f, 108.656f, 2.78501f},
{59.3047f, 109.004f, 3.72238f},
{59.0219f, 109.247f, 4.7085f},
{58.7281f, 109.357f, 5.75061f},
{58.4202f, 109.302f, 6.85683f},
{58.0944f, 109.06f, 8.03644f},
{57.7469f, 108.614f, 9.29953f},
{57.3736f, 107.954f, 10.6575f},
{56.97f, 107.07f, 12.1224f},
{56.5318f, 105.958f, 13.7068f},
{56.055f, 104.624f, 15.4224f},
{55.5365f, 103.085f, 17.2791f},
{54.9746f, 101.372f, 19.2833f},
{54.3696f, 99.5321f, 21.4354f},
{53.7239f, 97.6261f, 23.7285f},
{54.5567f, 94.1876f, 25.2239f},
{55.3684f, 91.0071f, 26.7443f},
{56.161f, 88.0635f, 28.2897f},
{56.9361f, 85.3377f, 29.8598f},
{57.6951f, 82.8138f, 31.4539f},
{58.4391f, 80.4771f, 33.0711f},
{59.1691f, 78.315f, 34.71f},
{59.8862f, 76.3161f, 36.3693f},
{60.591f, 74.47f, 38.047f},
{61.2843f, 72.7677f, 39.7413f},
{61.9668f, 71.2005f, 41.4497f},
{62.639f, 69.761f, 43.17f},
{63.3015f, 68.4421f, 44.8995f},
{63.9547f, 67.2372f, 46.6355f},
{64.599f, 66.1402f, 48.3751f},
{65.2348f, 65.1455f, 50.1155f},
{65.8625f, 64.2477f, 51.8536f},
{66.4824f, 63.4417f, 53.5865f},
{67.0949f, 62.7228f, 55.3111f},
{67.7002f, 62.0863f, 57.025f},
{68.2986f, 61.5279f, 58.725f},
{68.8903f, 61.0435f, 60.4085f},
{69.4756f, 60.6289f, 62.0732f},
{70.0546f, 60.2803f, 63.7165f},
{70.6276f, 59.9941f, 65.3365f},
{71.1948f, 59.7668f, 66.931f},
{71.7564f, 59.5948f, 68.4986f},
{72.3125f, 59.4749f, 70.0375f},
{72.8632f, 59.404f, 71.5465f},
{73.4088f, 59.3792f, 73.0245f},
{73.9494f, 59.3975f, 74.4705f},
{74.4852f, 59.4562f, 75.8837f},
{75.0161f, 59.5527f, 77.2638f},
{75.5424f, 59.6846f, 78.6104f},
{76.0643f, 59.8495f, 79.9233f},
{76.5817f, 60.0451f, 81.2023f},
{77.0949f, 60.2694f, 82.4476f},
{77.6039f, 60.5204f, 83.6595f},
{78.1088f, 60.7961f, 84.8381f},
{78.6097f, 61.0948f, 85.9839f},
{79.1068f, 61.4149f, 87.0976f},
{79.6f, 61.7547f, 88.1794f},
{80.0895f, 62.1128f, 89.2301f},
{80.5754f, 62.4877f, 90.2504f},
{81.0577f, 62.8783f, 91.241f},
{81.5365f, 63.2832f, 92.2024f},
{82.012f, 63.7013f, 93.1355f},
{82.484f, 64.1316f, 94.0412f},
{82.9529f, 64.573f, 94.92f},
{83.4184f, 65.0247f, 95.773f},
{83.8809f, 65.4856f, 96.6007f},
{84.3403f, 65.9551f, 97.404f},
{84.7966f, 66.4324f, 98.1836f},
{85.25f, 66.9167f, 98.9402f},
{85.7005f, 67.4075f, 99.6748f},
{86.1481f, 67.904f, 100.388f},
{86.5928f, 68.4058f, 101.08f},
{87.0349f, 68.9121f, 101.753f},
{87.4742f, 69.4227f, 102.406f},
{87.9109f, 69.937f, 103.04f},
{87.6666f, 69.9882f, 103.666f},
{87.4215f, 70.0485f, 104.294f},
{87.1755f, 70.118f, 104.925f},
{86.9287f, 70.1969f, 105.559f},
{86.6809f, 70.2853f, 106.195f},
{86.4322f, 70.3833f, 106.834f},
{86.1826f, 70.4913f, 107.474f},
{85.932f, 70.6091f, 108.117f},
{85.6805f, 70.737f, 108.761f},
{85.4281f, 70.8752f, 109.407f},
{85.1747f, 71.0237f, 110.055f},
{84.9203f, 71.1827f, 110.704f},
{84.665f, 71.3524f, 111.354f},
{84.4086f, 71.5329f, 112.006f},
{84.1512f, 71.7243f, 112.658f},
{83.8928f, 71.9268f, 113.311f},
{83.6334f, 72.1404f, 113.965f},
{83.373f, 72.3654f, 114.619f},
{83.1115f, 72.6019f, 115.274f},
{82.8489f, 72.85f, 115.928f},
{82.5852f, 73.1097f, 116.583f},
{82.3205f, 73.3813f, 117.237f},
{82.0546f, 73.665f, 117.891f},
{81.7877f, 73.9607f, 118.544f},
{81.5196f, 74.2687f, 119.197f},
{81.2503f, 74.5891f, 119.848f},
{80.9799f, 74.9219f, 120.499f},
{80.7083f, 75.2674f, 121.149f},
{80.4355f, 75.6256f, 121.797f},
{80.1615f, 75.9967f, 122.443f},
{79.8863f, 76.3808f, 123.088f},
{79.6098f, 76.7778f, 123.731f},
{79.3321f, 77.1883f, 124.372f},
{79.0532f, 77.6121f, 125.012f},
{78.7729f, 78.0494f, 125.648f},
{78.4913f, 78.5003f, 126.283f},
{78.2084f, 78.9649f, 126.915f},
{77.9242f, 79.4434f, 127.544f},
{77.6385f, 79.9358f, 128.171f},
{77.3515f, 80.4423f, 128.794f},
{77.0631f, 80.9631f, 129.415f},
{76.7733f, 81.4982f, 130.033f},
{76.4821f, 82.0478f, 130.647f},
{76.1893f, 82.612f, 131.258f},
{75.8951f, 83.191f, 131.866f},
{75.5994f, 83.7849f, 132.47f},
{75.3021f, 84.3937f, 133.07f},
{75.0033f, 85.0177f, 133.667f},
{74.7029f, 85.657f, 134.26f},
{74.4009f, 86.3116f, 134.849f},
{74.0972f, 86.982f, 135.434f},
{73.7919f, 87.6679f, 136.016f},
{73.4849f, 88.3698f, 136.593f},
{73.1762f, 89.0878f, 137.166f},
{72.8658f, 89.8218f, 137.734f},
{72.5535f, 90.5723f, 138.299f},
{72.2395f, 91.3392f, 138.859f},
{71.9236f, 92.1229f, 139.415f},
{71.6059f, 92.9234f, 139.967f},
{71.2863f, 93.741f, 140.514f},
{71.7008f, 92.7226f, 141.392f},
{72.1056f, 91.716f, 142.29f},
{72.5001f, 90.7222f, 143.208f},
{72.8837f, 89.7423f, 144.144f},
{73.256f, 88.7773f, 145.097f},
{73.6166f, 87.8281f, 146.064f},
{73.9652f, 86.8957f, 147.044f},
{74.3018f, 85.9811f, 148.035f},
{74.6262f, 85.0854f, 149.036f},
{74.9387f, 84.209f, 150.045f},
{75.2394f, 83.353f, 151.059f},
{75.5286f, 82.5177f, 152.079f},
{75.8067f, 81.7038f, 153.102f},
{76.0742f, 80.9116f, 154.126f},
{76.3314f, 80.1416f, 155.151f},
{76.579f, 79.3939f, 156.175f},
{76.8176f, 78.6686f, 157.197f},
{77.0476f, 77.9657f, 158.217f},
{77.2697f, 77.2851f, 159.232f},
{77.4844f, 76.6267f, 160.244f},
{77.6923f, 75.9903f, 161.249f},
{77.894f, 75.3756f, 162.249f},
{78.0899f, 74.7823f, 163.243f},
{78.2807f, 74.2098f, 164.229f},
{78.4668f, 73.6578f, 165.208f},
{78.6486f, 73.1258f, 166.179f},
{78.8267f, 72.6129f, 167.142f},
{79.0014f, 72.1188f, 168.096f},
{79.173f, 71.6427f, 169.042f},
{79.342f, 71.1838f, 169.978f},
{79.5088f, 70.7413f, 170.905f},
{79.6736f, 70.3144f, 171.823f},
{79.8368f, 69.902f, 172.731f},
{79.9986f, 69.503f, 173.629f},
{80.1594f, 69.1164f, 174.518f},
{80.3194f, 68.7417f, 175.397f},
{80.4788f, 68.3799f, 176.266f},
{80.6378f, 68.0322f, 177.125f},
{80.7965f, 67.6992f, 177.975f},
{80.955f, 67.3818f, 178.814f},
{81.1134f, 67.0805f, 179.644f},
{81.2716f, 66.7959f, 180.464f},
{81.4297f, 66.5281f, 181.275f},
{81.5878f, 66.277f, 182.076f},
{81.7457f, 66.0427f, 182.867f},
{81.9035f, 65.8249f, 183.649f},
{82.0613f, 65.6233f, 184.421f},
{82.2189f, 65.4372f, 185.183f},
{82.3764f, 65.2663f, 185.937f},
{82.5338f, 65.1098f, 186.681f},
{82.691f, 64.9673f, 187.415f},
{82.8482f, 64.838f, 188.141f},
{83.0053f, 64.7215f, 188.857f},
{83.1623f, 64.6171f, 189.564f},
{83.3193f, 64.5244f, 190.262f},
{83.4762f, 64.4426f, 190.951f},
{83.6331f, 64.3714f, 191.631f},
{83.7898f, 64.3103f, 192.302f},
{83.9466f, 64.2587f, 192.964f},
{84.1034f, 64.2165f, 193.618f},
{83.6079f, 63.7567f, 194.274f},
{83.1092f, 63.3006f, 194.943f},
{82.6074f, 62.8486f, 195.626f},
{82.1024f, 62.4008f, 196.324f},
{81.5942f, 61.9575f, 197.035f},
{81.0827f, 61.5187f, 197.761f},
{80.5679f, 61.0849f, 198.502f},
{80.0498f, 60.6562f, 199.258f},
{79.5283f, 60.2327f, 200.03f},
{79.0034f, 59.8149f, 200.818f},
{78.475f, 59.4032f, 201.622f},
{77.9432f, 58.9975f, 202.443f},
{77.4079f, 58.5984f, 203.28f},
{76.8691f, 58.2061f, 204.135f},
{76.3266f, 57.821f, 205.007f},
{75.7806f, 57.4433f, 205.898f},
{75.2309f, 57.0735f, 206.806f},
{74.6776f, 56.7119f, 207.733f},
{74.1206f, 56.3591f, 208.678f},
{73.5599f, 56.0152f, 209.643f},
{72.9954f, 55.6808f, 210.626f},
{72.4271f, 55.3564f, 211.63f},
{71.8551f, 55.0423f, 212.652f},
{71.2792f, 54.7392f, 213.695f},
{70.6994f, 54.4473f, 214.758f},
{70.1158f, 54.1674f, 215.841f},
{69.5283f, 53.8998f, 216.944f},
{68.9368f, 53.6452f, 218.068f},
{68.3415f, 53.404f, 219.213f},
{67.7422f, 53.1771f, 220.377f},
{67.1389f, 52.9646f, 221.563f},
{66.5317f, 52.7674f, 222.769f},
{65.9204f, 52.5863f, 223.995f},
{65.3052f, 52.4216f, 225.241f},
{64.686f, 52.2741f, 226.508f},
{64.0628f, 52.1445f, 227.794f},
{63.4356f, 52.0334f, 229.1f},
{62.8044f, 51.9415f, 230.425f},
{62.1692f, 51.8695f, 231.769f},
{61.53f, 51.8181f, 233.131f},
{60.8869f, 51.7881f, 234.512f},
{60.2398f, 51.7802f, 235.909f},
{59.5888f, 51.795f, 237.324f},
{58.9339f, 51.8335f, 238.755f},
{58.2752f, 51.8963f, 240.201f},
{57.6126f, 51.9841f, 241.662f},
{56.9462f, 52.0977f, 243.137f},
{56.276f, 52.238f, 244.625f},
{55.6022f, 52.4057f, 246.125f},
{54.9246f, 52.6015f, 247.637f},
{54.2436f, 52.8263f, 249.159f},
{53.5589f, 53.0808f, 250.691f},
{52.8708f, 53.3659f, 252.232f},
{52.1793f, 53.6823f, 253.78f},
{51.4846f, 54.0309f, 255.335f},
{50.7866f, 54.4126f, 256.895f},
{50.0855f, 54.828f, 258.461f},
{49.3814f, 55.2783f, 260.03f},
{48.6744f, 55.7641f, 261.602f},
{47.9646f, 56.2864f, 263.175f},
{48.3892f, 55.7602f, 265.259f},
{48.8122f, 55.3095f, 267.355f},
{49.2337f, 54.9336f, 269.457f},
{49.6535f, 54.6314f, 271.561f},
{50.0719f, 54.4015f, 273.661f},
{50.4886f, 54.2425f, 275.751f},
{50.9037f, 54.1523f, 277.826f},
{51.3172f, 54.129f, 279.882f},
{51.7291f, 54.1703f, 281.914f},
{52.1393f, 54.2738f, 283.917f},
{52.5479f, 54.4368f, 285.887f},
{52.9548f, 54.6566f, 287.821f},
{53.3601f, 54.9306f, 289.716f},
{53.7637f, 55.2558f, 291.569f},
{54.1656f, 55.6293f, 293.379f},
{54.5658f, 56.0483f, 295.143f},
{54.9643f, 56.5099f, 296.86f},
{55.3612f, 57.0114f, 298.53f},
{55.7563f, 57.5502f, 300.151f},
{56.1497f, 58.1233f, 301.724f},
{56.5414f, 58.7283f, 303.249f},
{56.9314f, 59.3629f, 304.726f},
{57.3197f, 60.0245f, 306.155f},
{57.7062f, 60.711f, 307.538f},
{58.091f, 61.4201f, 308.876f},
{58.4741f, 62.1499f, 310.169f},
{58.8554f, 62.8985f, 311.418f},
{59.235f, 63.6641f, 312.625f},
{59.6129f, 64.445f, 313.791f},
{59.989f, 65.2395f, 314.918f},
{60.3635f, 66.0462f, 316.006f},
{60.7362f, 66.8638f, 317.058f},
{61.1072f, 67.6909f, 318.073f},
{61.4765f, 68.5262f, 319.055f},
{61.8441f, 69.3689f, 320.003f},
{62.21f, 70.2178f, 320.92f},
{62.5742f, 71.0718f, 321.807f},
{62.9367f, 71.9302f, 322.664f},
{63.2975f, 72.7921f, 323.493f},
{63.6567f, 73.6569f, 324.295f},
{64.0142f, 74.5236f, 325.072f},
{64.37f, 75.3918f, 325.824f},
{64.7242f, 76.2608f, 326.552f},
{65.0768f, 77.1301f, 327.258f},
{65.4277f, 77.9992f, 327.942f},
{65.777f, 78.8675f, 328.605f},
{66.1247f, 79.7349f, 329.248f},
{66.4707f, 80.6006f, 329.872f},
{66.8152f, 81.4646f, 330.478f},
{67.1581f, 82.3263f, 331.066f},
{67.4994f, 83.1856f, 331.637f},
{67.8391f, 84.0422f, 332.192f},
{68.1773f, 84.8959f, 332.731f},
{68.5139f, 85.7463f, 333.256f},
{68.849f, 86.5934f, 333.766f},
{69.1826f, 87.437f, 334.263f},
{69.5146f, 88.2766f, 334.746f},
{69.8452f, 89.1125f, 335.217f},
{70.1742f, 89.9444f, 335.675f},
{70.5018f, 90.7721f, 336.122f},
{70.2806f, 90.9971f, 336.564f},
{70.0589f, 91.2282f, 337.009f},
{69.8367f, 91.4658f, 337.457f},
{69.614f, 91.7096f, 337.91f},
{69.3908f, 91.9598f, 338.366f},
{69.167f, 92.2164f, 338.825f},
{68.9427f, 92.4795f, 339.289f},
{68.7179f, 92.7491f, 339.756f},
{68.4925f, 93.0254f, 340.228f},
{68.2666f, 93.3084f, 340.704f},
{68.0401f, 93.5981f, 341.183f},
{67.8131f, 93.8946f, 341.667f},
{67.5855f, 94.1979f, 342.156f},
{67.3573f, 94.508f, 342.649f},
{67.1285f, 94.8251f, 343.146f},
{66.8991f, 95.1492f, 343.649f},
{66.669f, 95.4802f, 344.156f},
{66.4383f, 95.8184f, 344.669f},
{66.207f, 96.1638f, 345.186f},
{65.975f, 96.5165f, 345.71f},
{65.7422f, 96.8764f, 346.239f},
{65.5088f, 97.244f, 346.774f},
{65.2745f, 97.6191f, 347.315f},
{65.0395f, 98.0023f, 347.862f},
{64.8036f, 98.3934f, 348.417f},
{64.5668f, 98.7931f, 348.978f},
{64.3291f, 99.2014f, 349.548f},
{64.0905f, 99.6189f, 350.125f},
{63.8509f, 100.046f, 350.71f},
{63.6102f, 100.484f, 351.304f},
{63.3685f, 100.932f, 351.908f},
{63.1256f, 101.392f, 352.522f},
{62.8816f, 101.864f, 353.146f},
{62.6364f, 102.35f, 353.782f},
{62.39f, 102.849f, 354.43f},
{62.1424f, 103.363f, 355.091f},
{61.8936f, 103.89f, 355.767f},
{61.6436f, 104.431f, 356.458f},
{61.3923f, 104.983f, 357.167f},
{61.1396f, 105.544f, 357.893f},
{60.8856f, 106.108f, 358.641f},
{60.6298f, 106.67f, 359.411f}
};

__CONSTANT__ float upperHullGamma[36] = {
0.81f,
0.833f,
0.91f,
1.0f,
1.16f,
1.14f,
1.29f,
1.49f,
1.46f,
1.82f,
2.1f,
1.2f,
1.3f,
1.2f,
1.29f,
1.02f,
1.0f,
0.96f,
1.01f,
1.02f,
1.059f,
1.1f,
1.23f,
1.11f,
1.14f,
1.14f,
1.15f,
1.13f,
1.15f,
1.15f,
1.18f,
1.08f,
1.2f,
1.1f,
0.9f,
0.98f
};

__CONSTANT__ float gamutCuspTableReach[360] = {
197.0f,
199.0f,
202.0f,
203.0f,
205.0f,
206.0f,
207.0f,
207.0f,
207.0f,
207.0f,
207.0f,
206.0f,
205.0f,
204.0f,
203.0f,
202.0f,
200.0f,
199.0f,
198.0f,
197.0f,
194.0f,
187.0f,
181.0f,
175.0f,
169.0f,
164.0f,
159.0f,
154.0f,
150.0f,
146.0f,
142.0f,
139.0f,
136.0f,
132.0f,
130.0f,
127.0f,
124.0f,
122.0f,
119.0f,
117.0f,
115.0f,
113.0f,
111.0f,
109.0f,
108.0f,
106.0f,
104.0f,
103.0f,
101.0f,
100.0f,
99.0f,
98.0f,
96.0f,
95.0f,
94.0f,
93.0f,
92.0f,
91.0f,
91.0f,
90.0f,
89.0f,
88.0f,
88.0f,
87.0f,
86.0f,
86.0f,
85.0f,
85.0f,
84.0f,
84.0f,
83.0f,
83.0f,
82.0f,
82.0f,
82.0f,
82.0f,
81.0f,
81.0f,
81.0f,
81.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
81.0f,
81.0f,
81.0f,
81.0f,
82.0f,
82.0f,
82.0f,
83.0f,
83.0f,
83.0f,
84.0f,
84.0f,
85.0f,
85.0f,
86.0f,
86.0f,
87.0f,
88.0f,
88.0f,
89.0f,
90.0f,
91.0f,
92.0f,
92.0f,
93.0f,
94.0f,
95.0f,
97.0f,
98.0f,
99.0f,
100.0f,
102.0f,
103.0f,
104.0f,
106.0f,
108.0f,
109.0f,
111.0f,
113.0f,
115.0f,
117.0f,
120.0f,
122.0f,
125.0f,
127.0f,
130.0f,
133.0f,
136.0f,
140.0f,
143.0f,
147.0f,
151.0f,
155.0f,
160.0f,
161.0f,
160.0f,
158.0f,
157.0f,
155.0f,
154.0f,
153.0f,
152.0f,
150.0f,
149.0f,
148.0f,
147.0f,
146.0f,
145.0f,
144.0f,
143.0f,
142.0f,
142.0f,
141.0f,
140.0f,
139.0f,
138.0f,
137.0f,
136.0f,
135.0f,
134.0f,
133.0f,
133.0f,
132.0f,
131.0f,
129.0f,
128.0f,
127.0f,
126.0f,
125.0f,
124.0f,
123.0f,
122.0f,
122.0f,
121.0f,
120.0f,
119.0f,
118.0f,
118.0f,
117.0f,
116.0f,
116.0f,
115.0f,
114.0f,
114.0f,
113.0f,
113.0f,
112.0f,
112.0f,
111.0f,
111.0f,
111.0f,
110.0f,
110.0f,
109.0f,
109.0f,
109.0f,
108.0f,
108.0f,
108.0f,
108.0f,
107.0f,
107.0f,
107.0f,
107.0f,
107.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
107.0f,
107.0f,
107.0f,
107.0f,
107.0f,
108.0f,
108.0f,
108.0f,
109.0f,
109.0f,
109.0f,
110.0f,
110.0f,
111.0f,
111.0f,
112.0f,
112.0f,
113.0f,
113.0f,
114.0f,
115.0f,
115.0f,
114.0f,
113.0f,
112.0f,
111.0f,
110.0f,
109.0f,
108.0f,
108.0f,
107.0f,
106.0f,
105.0f,
105.0f,
104.0f,
103.0f,
103.0f,
102.0f,
102.0f,
101.0f,
101.0f,
101.0f,
100.0f,
100.0f,
100.0f,
99.0f,
99.0f,
99.0f,
99.0f,
99.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
99.0f,
99.0f,
99.0f,
99.0f,
99.0f,
100.0f,
100.0f,
100.0f,
101.0f,
101.0f,
101.0f,
102.0f,
102.0f,
103.0f,
103.0f,
104.0f,
104.0f,
105.0f,
106.0f,
106.0f,
107.0f,
108.0f,
109.0f,
110.0f,
111.0f,
112.0f,
112.0f,
114.0f,
115.0f,
116.0f,
117.0f,
118.0f,
119.0f,
121.0f,
122.0f,
123.0f,
125.0f,
126.0f,
128.0f,
130.0f,
131.0f,
133.0f,
135.0f,
137.0f,
139.0f,
141.0f,
143.0f,
145.0f,
147.0f,
149.0f,
152.0f,
154.0f,
156.0f,
159.0f,
161.0f,
164.0f,
166.0f,
169.0f,
172.0f,
175.0f,
177.0f,
180.0f,
183.0f,
186.0f,
189.0f,
192.0f,
194.0f
};

__CONSTANT__ float3 cGamutCuspTable[360] = {
{66.2342f, 138.09f, 0.0874088f},
{66.0272f, 138.684f, 0.645807f},
{65.8179f, 139.244f, 1.22086f},
{65.6058f, 139.76f, 1.81442f},
{65.3902f, 140.219f, 2.42868f},
{65.1703f, 140.606f, 3.06605f},
{64.9451f, 140.905f, 3.7293f},
{64.7132f, 141.099f, 4.42165f},
{64.4732f, 141.166f, 5.14662f},
{64.2233f, 141.087f, 5.9082f},
{63.9616f, 140.838f, 6.71076f},
{63.6858f, 140.404f, 7.55892f},
{63.3938f, 139.774f, 8.45781f},
{63.0835f, 138.941f, 9.41272f},
{62.7525f, 137.899f, 10.4293f},
{62.3988f, 136.647f, 11.5131f},
{62.0203f, 135.187f, 12.6695f},
{61.6155f, 133.53f, 13.9034f},
{61.1834f, 131.693f, 15.2181f},
{60.7238f, 129.7f, 16.6159f},
{60.2374f, 127.586f, 18.0964f},
{59.7257f, 125.392f, 19.6567f},
{60.415f, 121.297f, 20.8148f},
{61.0871f, 117.437f, 21.9958f},
{61.7436f, 113.796f, 23.2003f},
{62.3857f, 110.361f, 24.4291f},
{63.0146f, 107.119f, 25.6826f},
{63.6314f, 104.059f, 26.9611f},
{64.237f, 101.171f, 28.2649f},
{64.832f, 98.4447f, 29.594f},
{65.4174f, 95.8732f, 30.9485f},
{65.9935f, 93.4484f, 32.3278f},
{66.5611f, 91.1636f, 33.7317f},
{67.1206f, 89.0124f, 35.1596f},
{67.6725f, 86.9889f, 36.6107f},
{68.2171f, 85.088f, 38.0841f},
{68.7549f, 83.3047f, 39.5787f},
{69.2861f, 81.6344f, 41.0931f},
{69.811f, 80.0728f, 42.626f},
{70.3301f, 78.6161f, 44.1757f},
{70.8434f, 77.2602f, 45.7405f},
{71.3512f, 76.0017f, 47.3183f},
{71.8538f, 74.8371f, 48.9072f},
{72.3513f, 73.7629f, 50.5052f},
{72.8439f, 72.7763f, 52.1097f},
{73.3318f, 71.8738f, 53.7187f},
{73.8152f, 71.0527f, 55.3296f},
{74.2942f, 70.3098f, 56.9401f},
{74.769f, 69.6423f, 58.5478f},
{75.2396f, 69.0474f, 60.1502f},
{75.7062f, 68.5222f, 61.7451f},
{76.1689f, 68.0639f, 63.3301f},
{76.6279f, 67.67f, 64.9028f},
{77.0832f, 67.3376f, 66.4614f},
{77.5349f, 67.0641f, 68.0037f},
{77.9831f, 66.8469f, 69.5279f},
{78.4279f, 66.6835f, 71.0322f},
{78.8695f, 66.5713f, 72.5151f},
{79.3078f, 66.508f, 73.9751f},
{79.743f, 66.491f, 75.4109f},
{80.175f, 66.5181f, 76.8215f},
{80.6041f, 66.5869f, 78.2057f},
{81.0303f, 66.6953f, 79.563f},
{81.4535f, 66.8411f, 80.8924f},
{81.874f, 67.0223f, 82.1936f},
{82.2916f, 67.2367f, 83.4663f},
{82.7066f, 67.4826f, 84.7099f},
{83.1189f, 67.758f, 85.9246f},
{83.5287f, 68.0612f, 87.1103f},
{83.9359f, 68.3905f, 88.267f},
{84.3406f, 68.7442f, 89.3948f},
{84.7429f, 69.1208f, 90.4941f},
{85.1427f, 69.5189f, 91.5651f},
{85.5402f, 69.937f, 92.6082f},
{85.9353f, 70.3737f, 93.6237f},
{86.3282f, 70.8279f, 94.6124f},
{86.7189f, 71.2983f, 95.5745f},
{87.1074f, 71.7837f, 96.5105f},
{87.4937f, 72.2832f, 97.4213f},
{87.8778f, 72.7956f, 98.3072f},
{88.2599f, 73.3202f, 99.1689f},
{88.6399f, 73.8557f, 100.007f},
{88.3336f, 73.9088f, 100.834f},
{88.026f, 73.9784f, 101.666f},
{87.717f, 74.0646f, 102.501f},
{87.4065f, 74.1679f, 103.341f},
{87.0947f, 74.2884f, 104.184f},
{86.7814f, 74.4266f, 105.03f},
{86.4666f, 74.5827f, 105.879f},
{86.1504f, 74.757f, 106.731f},
{85.8326f, 74.9498f, 107.585f},
{85.5133f, 75.1613f, 108.44f},
{85.1925f, 75.3919f, 109.297f},
{84.8701f, 75.6417f, 110.155f},
{84.5462f, 75.911f, 111.013f},
{84.2206f, 76.2003f, 111.872f},
{83.8934f, 76.5095f, 112.731f},
{83.5646f, 76.8391f, 113.589f},
{83.234f, 77.1891f, 114.446f},
{82.9018f, 77.56f, 115.303f},
{82.5678f, 77.9518f, 116.157f},
{82.2321f, 78.3649f, 117.01f},
{81.8946f, 78.7995f, 117.86f},
{81.5553f, 79.2556f, 118.708f},
{81.2141f, 79.7336f, 119.553f},
{80.8711f, 80.2337f, 120.394f},
{80.5262f, 80.7561f, 121.232f},
{80.1794f, 81.301f, 122.066f},
{79.8306f, 81.8685f, 122.895f},
{79.4799f, 82.4589f, 123.72f},
{79.1271f, 83.0722f, 124.54f},
{78.7722f, 83.7089f, 125.355f},
{78.4153f, 84.369f, 126.165f},
{78.0563f, 85.0526f, 126.969f},
{77.695f, 85.76f, 127.767f},
{77.3316f, 86.4914f, 128.559f},
{76.966f, 87.2469f, 129.344f},
{76.5981f, 88.0268f, 130.123f},
{76.2279f, 88.8312f, 130.896f},
{75.8552f, 89.6603f, 131.662f},
{75.4802f, 90.5144f, 132.42f},
{75.1028f, 91.3934f, 133.172f},
{74.7228f, 92.2978f, 133.916f},
{74.3403f, 93.2278f, 134.652f},
{73.9553f, 94.1834f, 135.382f},
{73.5675f, 95.165f, 136.103f},
{73.1771f, 96.1729f, 136.817f},
{72.7839f, 97.2071f, 137.524f},
{72.3879f, 98.268f, 138.222f},
{71.989f, 99.3558f, 138.913f},
{71.5872f, 100.471f, 139.595f},
{71.1824f, 101.613f, 140.27f},
{70.7745f, 102.784f, 140.937f},
{70.3635f, 103.982f, 141.596f},
{69.9493f, 105.209f, 142.247f},
{69.5318f, 106.464f, 142.89f},
{69.111f, 107.749f, 143.525f},
{68.6867f, 109.063f, 144.152f},
{68.2589f, 110.406f, 144.772f},
{67.8276f, 111.78f, 145.384f},
{67.3925f, 113.185f, 145.988f},
{66.9536f, 114.621f, 146.584f},
{67.3403f, 114.122f, 147.465f},
{67.7194f, 113.643f, 148.361f},
{68.0903f, 113.182f, 149.271f},
{68.4522f, 112.739f, 150.193f},
{68.8043f, 112.311f, 151.125f},
{69.1461f, 111.899f, 152.064f},
{69.4771f, 111.499f, 153.007f},
{69.7968f, 111.111f, 153.954f},
{70.1049f, 110.734f, 154.901f},
{70.4013f, 110.366f, 155.847f},
{70.6858f, 110.005f, 156.789f},
{70.9586f, 109.652f, 157.726f},
{71.2198f, 109.303f, 158.656f},
{71.4698f, 108.96f, 159.578f},
{71.7089f, 108.62f, 160.49f},
{71.9376f, 108.284f, 161.392f},
{72.1564f, 107.95f, 162.281f},
{72.3659f, 107.617f, 163.159f},
{72.5667f, 107.286f, 164.023f},
{72.7594f, 106.956f, 164.874f},
{72.9447f, 106.627f, 165.712f},
{73.1232f, 106.298f, 166.535f},
{73.2956f, 105.969f, 167.344f},
{73.4624f, 105.639f, 168.139f},
{73.6242f, 105.308f, 168.921f},
{73.7817f, 104.976f, 169.688f},
{73.9354f, 104.643f, 170.441f},
{74.0858f, 104.308f, 171.181f},
{74.2334f, 103.97f, 171.908f},
{74.3787f, 103.629f, 172.621f},
{74.5222f, 103.285f, 173.322f},
{74.6643f, 102.936f, 174.01f},
{74.8054f, 102.581f, 174.686f},
{74.9458f, 102.223f, 175.35f},
{75.0859f, 101.864f, 176.003f},
{75.2258f, 101.506f, 176.644f},
{75.3657f, 101.151f, 177.275f},
{75.5057f, 100.801f, 177.895f},
{75.6459f, 100.457f, 178.505f},
{75.7863f, 100.121f, 179.105f},
{75.927f, 99.7949f, 179.695f},
{76.068f, 99.4786f, 180.277f},
{76.2092f, 99.1733f, 180.849f},
{76.3507f, 98.8798f, 181.413f},
{76.4924f, 98.5984f, 181.969f},
{76.6343f, 98.3293f, 182.516f},
{76.7764f, 98.0728f, 183.056f},
{76.9187f, 97.8287f, 183.587f},
{77.0611f, 97.5969f, 184.112f},
{77.2036f, 97.3772f, 184.629f},
{77.3462f, 97.1693f, 185.139f},
{77.4888f, 96.9728f, 185.642f},
{77.6316f, 96.7874f, 186.138f},
{77.7744f, 96.6126f, 186.628f},
{77.9173f, 96.4481f, 187.111f},
{78.0602f, 96.2932f, 187.588f},
{78.2032f, 96.1478f, 188.059f},
{78.3463f, 96.0113f, 188.523f},
{78.4894f, 95.8833f, 188.982f},
{78.6326f, 95.7635f, 189.435f},
{78.1651f, 95.0134f, 189.89f},
{77.6947f, 94.2623f, 190.355f},
{77.2214f, 93.5099f, 190.829f},
{76.7451f, 92.7568f, 191.314f},
{76.2658f, 92.0026f, 191.809f},
{75.7835f, 91.2472f, 192.316f},
{75.2981f, 90.4909f, 192.834f},
{74.8097f, 89.7337f, 193.364f},
{74.3181f, 88.9754f, 193.906f},
{73.8234f, 88.2162f, 194.461f},
{73.3256f, 87.4562f, 195.028f},
{72.8245f, 86.6953f, 195.61f},
{72.3203f, 85.9336f, 196.205f},
{71.8128f, 85.1712f, 196.815f},
{71.3021f, 84.4082f, 197.441f},
{70.7881f, 83.6447f, 198.082f},
{70.2708f, 82.8809f, 198.739f},
{69.7502f, 82.1168f, 199.413f},
{69.2263f, 81.3527f, 200.105f},
{68.6991f, 80.5887f, 200.816f},
{68.1685f, 79.825f, 201.545f},
{67.6345f, 79.0619f, 202.294f},
{67.0972f, 78.2996f, 203.063f},
{66.5565f, 77.5384f, 203.854f},
{66.0124f, 76.7788f, 204.668f},
{65.4649f, 76.021f, 205.504f},
{64.914f, 75.2653f, 206.364f},
{64.3598f, 74.5125f, 207.25f},
{63.8021f, 73.7628f, 208.162f},
{63.2411f, 73.017f, 209.1f},
{62.6766f, 72.2755f, 210.067f},
{62.1088f, 71.5389f, 211.064f},
{61.5377f, 70.8083f, 212.091f},
{60.9632f, 70.0842f, 213.15f},
{60.3854f, 69.3674f, 214.242f},
{59.8042f, 68.6592f, 215.368f},
{59.2198f, 67.9605f, 216.531f},
{58.6322f, 67.2723f, 217.73f},
{58.0413f, 66.596f, 218.968f},
{57.4473f, 65.933f, 220.246f},
{56.8501f, 65.2846f, 221.565f},
{56.2498f, 64.6525f, 222.926f},
{55.6464f, 64.0385f, 224.332f},
{55.0401f, 63.4442f, 225.783f},
{54.4308f, 62.8719f, 227.281f},
{53.8186f, 62.3236f, 228.827f},
{53.2037f, 61.8018f, 230.422f},
{52.586f, 61.3088f, 232.066f},
{51.9656f, 60.8473f, 233.762f},
{51.3427f, 60.4202f, 235.508f},
{50.7173f, 60.0304f, 237.307f},
{50.0895f, 59.6811f, 239.157f},
{49.4594f, 59.3758f, 241.059f},
{48.8271f, 59.1178f, 243.012f},
{48.1927f, 58.9109f, 245.015f},
{47.5565f, 58.7588f, 247.067f},
{46.9184f, 58.6657f, 249.166f},
{46.2786f, 58.6353f, 251.31f},
{45.6373f, 58.672f, 253.496f},
{44.9946f, 58.78f, 255.72f},
{45.5579f, 57.6759f, 258.735f},
{46.1187f, 56.7423f, 261.813f},
{46.6769f, 55.9802f, 264.938f},
{47.2324f, 55.3889f, 268.091f},
{47.7853f, 54.9664f, 271.255f},
{48.3353f, 54.7091f, 274.411f},
{48.8826f, 54.6119f, 277.541f},
{49.427f, 54.6685f, 280.626f},
{49.9685f, 54.8715f, 283.65f},
{50.5071f, 55.2125f, 286.6f},
{51.0428f, 55.6824f, 289.465f},
{51.5755f, 56.2716f, 292.233f},
{52.1053f, 56.9705f, 294.899f},
{52.632f, 57.7694f, 297.458f},
{53.1557f, 58.6588f, 299.906f},
{53.6763f, 59.6295f, 302.244f},
{54.1938f, 60.6726f, 304.471f},
{54.7081f, 61.78f, 306.59f},
{55.2194f, 62.9439f, 308.603f},
{55.7274f, 64.1571f, 310.514f},
{56.2323f, 65.4132f, 312.327f},
{56.7341f, 66.706f, 314.047f},
{57.2327f, 68.03f, 315.678f},
{57.7281f, 69.3803f, 317.224f},
{58.2204f, 70.7526f, 318.691f},
{58.7095f, 72.1427f, 320.083f},
{59.1955f, 73.5471f, 321.405f},
{59.6784f, 74.9625f, 322.66f},
{60.1581f, 76.386f, 323.853f},
{60.6348f, 77.8153f, 324.987f},
{61.1083f, 79.2479f, 326.067f},
{61.5788f, 80.6818f, 327.096f},
{62.0463f, 82.1154f, 328.076f},
{62.5107f, 83.5468f, 329.012f},
{62.9721f, 84.975f, 329.905f},
{63.4305f, 86.3985f, 330.759f},
{63.886f, 87.8164f, 331.575f},
{64.3385f, 89.2277f, 332.356f},
{64.7881f, 90.6318f, 333.105f},
{65.2349f, 92.0277f, 333.822f},
{65.6787f, 93.4148f, 334.511f},
{66.1197f, 94.793f, 335.172f},
{66.558f, 96.1613f, 335.808f},
{66.9934f, 97.5197f, 336.419f},
{67.426f, 98.8679f, 337.007f},
{67.8559f, 100.205f, 337.574f},
{68.2832f, 101.532f, 338.12f},
{68.7077f, 102.848f, 338.647f},
{69.1296f, 104.153f, 339.156f},
{69.5489f, 105.447f, 339.647f},
{69.9655f, 106.73f, 340.122f},
{70.3796f, 108.001f, 340.581f},
{70.7912f, 109.261f, 341.026f},
{71.2002f, 110.511f, 341.456f},
{71.6068f, 111.749f, 341.873f},
{72.0109f, 112.976f, 342.277f},
{72.4125f, 114.192f, 342.669f},
{72.8118f, 115.397f, 343.05f},
{73.2087f, 116.592f, 343.42f},
{73.6032f, 117.775f, 343.779f},
{73.4252f, 118.173f, 344.133f},
{73.2469f, 118.576f, 344.489f},
{73.0681f, 118.983f, 344.847f},
{72.889f, 119.396f, 345.207f},
{72.7095f, 119.815f, 345.569f},
{72.5296f, 120.238f, 345.933f},
{72.3492f, 120.668f, 346.299f},
{72.1684f, 121.102f, 346.668f},
{71.9872f, 121.542f, 347.039f},
{71.8054f, 121.987f, 347.412f},
{71.6232f, 122.439f, 347.788f},
{71.4405f, 122.896f, 348.166f},
{71.2572f, 123.359f, 348.547f},
{71.0734f, 123.827f, 348.931f},
{70.889f, 124.303f, 349.318f},
{70.704f, 124.784f, 349.709f},
{70.5184f, 125.273f, 350.102f},
{70.3321f, 125.768f, 350.499f},
{70.1452f, 126.271f, 350.899f},
{69.9575f, 126.781f, 351.303f},
{69.7692f, 127.299f, 351.711f},
{69.5801f, 127.825f, 352.123f},
{69.3902f, 128.361f, 352.54f},
{69.1995f, 128.905f, 352.961f},
{69.0081f, 129.46f, 353.387f},
{68.8158f, 130.024f, 353.817f},
{68.6227f, 130.599f, 354.254f},
{68.4287f, 131.184f, 354.696f},
{68.2339f, 131.78f, 355.145f},
{68.0382f, 132.387f, 355.599f},
{67.8417f, 133.004f, 356.061f},
{67.6443f, 133.631f, 356.531f},
{67.446f, 134.265f, 357.008f},
{67.2468f, 134.907f, 357.495f},
{67.0466f, 135.552f, 357.991f},
{66.8454f, 136.198f, 358.497f},
{66.643f, 136.84f, 359.014f},
{66.4394f, 137.473f, 359.544f}
};

__CONSTANT__ float cGamutReachTable[360] = {
197.0f,
199.0f,
202.0f,
203.0f,
205.0f,
206.0f,
207.0f,
207.0f,
207.0f,
207.0f,
207.0f,
206.0f,
205.0f,
204.0f,
203.0f,
202.0f,
200.0f,
199.0f,
198.0f,
197.0f,
194.0f,
187.0f,
181.0f,
175.0f,
169.0f,
164.0f,
159.0f,
154.0f,
150.0f,
146.0f,
142.0f,
139.0f,
136.0f,
132.0f,
130.0f,
127.0f,
124.0f,
122.0f,
119.0f,
117.0f,
115.0f,
113.0f,
111.0f,
109.0f,
108.0f,
106.0f,
104.0f,
103.0f,
101.0f,
100.0f,
99.0f,
98.0f,
96.0f,
95.0f,
94.0f,
93.0f,
92.0f,
91.0f,
91.0f,
90.0f,
89.0f,
88.0f,
88.0f,
87.0f,
86.0f,
86.0f,
85.0f,
85.0f,
84.0f,
84.0f,
83.0f,
83.0f,
82.0f,
82.0f,
82.0f,
82.0f,
81.0f,
81.0f,
81.0f,
81.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
80.0f,
81.0f,
81.0f,
81.0f,
81.0f,
82.0f,
82.0f,
82.0f,
83.0f,
83.0f,
83.0f,
84.0f,
84.0f,
85.0f,
85.0f,
86.0f,
86.0f,
87.0f,
88.0f,
88.0f,
89.0f,
90.0f,
91.0f,
92.0f,
92.0f,
93.0f,
94.0f,
95.0f,
97.0f,
98.0f,
99.0f,
100.0f,
102.0f,
103.0f,
104.0f,
106.0f,
108.0f,
109.0f,
111.0f,
113.0f,
115.0f,
117.0f,
120.0f,
122.0f,
125.0f,
127.0f,
130.0f,
133.0f,
136.0f,
140.0f,
143.0f,
147.0f,
151.0f,
155.0f,
160.0f,
161.0f,
160.0f,
158.0f,
157.0f,
155.0f,
154.0f,
153.0f,
152.0f,
150.0f,
149.0f,
148.0f,
147.0f,
146.0f,
145.0f,
144.0f,
143.0f,
142.0f,
142.0f,
141.0f,
140.0f,
139.0f,
138.0f,
137.0f,
136.0f,
135.0f,
134.0f,
133.0f,
133.0f,
132.0f,
131.0f,
129.0f,
128.0f,
127.0f,
126.0f,
125.0f,
124.0f,
123.0f,
122.0f,
122.0f,
121.0f,
120.0f,
119.0f,
118.0f,
118.0f,
117.0f,
116.0f,
116.0f,
115.0f,
114.0f,
114.0f,
113.0f,
113.0f,
112.0f,
112.0f,
111.0f,
111.0f,
111.0f,
110.0f,
110.0f,
109.0f,
109.0f,
109.0f,
108.0f,
108.0f,
108.0f,
108.0f,
107.0f,
107.0f,
107.0f,
107.0f,
107.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
106.0f,
107.0f,
107.0f,
107.0f,
107.0f,
107.0f,
108.0f,
108.0f,
108.0f,
109.0f,
109.0f,
109.0f,
110.0f,
110.0f,
111.0f,
111.0f,
112.0f,
112.0f,
113.0f,
113.0f,
114.0f,
115.0f,
115.0f,
114.0f,
113.0f,
112.0f,
111.0f,
110.0f,
109.0f,
108.0f,
108.0f,
107.0f,
106.0f,
105.0f,
105.0f,
104.0f,
103.0f,
103.0f,
102.0f,
102.0f,
101.0f,
101.0f,
101.0f,
100.0f,
100.0f,
100.0f,
99.0f,
99.0f,
99.0f,
99.0f,
99.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
98.0f,
99.0f,
99.0f,
99.0f,
99.0f,
99.0f,
100.0f,
100.0f,
100.0f,
101.0f,
101.0f,
101.0f,
102.0f,
102.0f,
103.0f,
103.0f,
104.0f,
104.0f,
105.0f,
106.0f,
106.0f,
107.0f,
108.0f,
109.0f,
110.0f,
111.0f,
112.0f,
112.0f,
114.0f,
115.0f,
116.0f,
117.0f,
118.0f,
119.0f,
121.0f,
122.0f,
123.0f,
125.0f,
126.0f,
128.0f,
130.0f,
131.0f,
133.0f,
135.0f,
137.0f,
139.0f,
141.0f,
143.0f,
145.0f,
147.0f,
149.0f,
152.0f,
154.0f,
156.0f,
159.0f,
161.0f,
164.0f,
166.0f,
169.0f,
172.0f,
175.0f,
177.0f,
180.0f,
183.0f,
186.0f,
189.0f,
192.0f,
194.0f
};

#include "hellwig_lib_v051.h"

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
    float3 in = make_float3(p_R, p_G, p_B);
    float3 out = in;
    in.x = _clampf(in.x, -HALF_MAXIMUM, HALF_MAXIMUM);
    in.y = _clampf(in.y, -HALF_MAXIMUM, HALF_MAXIMUM);
    in.z = _clampf(in.z, -HALF_MAXIMUM, HALF_MAXIMUM);

    float3 inWhite = vector_dot(AP0_ACES_to_XYZ_matrix, make_float3(100.0f, 100.0f, 100.0f));
    float3 XYZ;

    if (!invert)
    {
        XYZ = vector_dot(AP0_ACES_to_XYZ_matrix, in);
    }
    else
    {
        in = float3spow(in, 2.6f);
        XYZ = vector_dot(RGB_to_XYZ_output, in);
    }
    XYZ *= referenceLuminance;
    float3 JMh;
    if (!invert)
    {
        JMh = XYZ_to_Hellwig2022_JMh(XYZ, inWhite);
        if (toneCurve)
        {
            JMh = forwardTonescale(JMh, compressChroma, simpleToneMap);
        }
        if (gamutCompress)
        {
            JMh = compressGamut(JMh, 0);
        }
    }
    else
    {
        JMh = XYZ_to_Hellwig2022_JMh(XYZ, d65White);
        if (gamutCompress)
        {
            JMh = compressGamut(JMh, 1);
        }
        if (toneCurve)
        {
            JMh = inverseTonescale(JMh, compressChroma, simpleToneMap);
        }
    }
    if (JMhOut)
    {
        out.x = JMh.x / referenceLuminance;
        out.y = JMh.y / referenceLuminance;
        out.z = JMh.z / 360.0f;
    }
    else
    {
        if (!invert)
        {
            if (!d60Sim)
            {
                XYZ = Hellwig2022_JMh_to_XYZ(JMh , d65White) / referenceLuminance;
            }
            else
            {
                XYZ = Hellwig2022_JMh_to_XYZ(JMh , inWhite) / referenceLuminance;
                float3 creativeWhiteXYZ = vector_dot(RGB_to_XYZ_P3D60, make_float3(1.0f, 1.0f, 1.0f));
                float3 creativeWhiteRGB = vector_dot(XYZ_to_RGB_output, creativeWhiteXYZ);
                XYZ *= 1.0f / max(creativeWhiteRGB.x, max(creativeWhiteRGB.y, creativeWhiteRGB.z));
            }
            out = vector_dot(XYZ_to_RGB_output, XYZ);

            // Soft clamp by compressing negative display linear values
            float3 compr = make_float3(clamp_thr, clamp_dist, 1.2f);
            out = compress_aces(out, compr, compr, compr, 0);

            // hard clip 0-1
            out = clamp3(out, 0.0f, 1.0f);
            
            if (asPQ)
            {
                out *= 48.0f;
                out.x = linear_to_ST2084(out.x);
                out.y = linear_to_ST2084(out.y);
                out.z = linear_to_ST2084(out.z);
            }
            else
            {
                out = float3spow(out, 1.0f / 2.6f);
            }
        }
        else
        {
            XYZ = Hellwig2022_JMh_to_XYZ(JMh , inWhite) / referenceLuminance;
            out = vector_dot(XYZ_to_AP0_ACES_matrix, XYZ);
        }
        // trap black pixel NaNs
        if (isnan(out.x) || isnan(out.y) || isnan(out.z))
        {
            out = make_float3(0.0f, 0.0f, 0.0f);
        }
    }

    return out;
}